
如何将如下的JSON正确解析成 Object
{
  "userId": 111323290434354540545
}

答:

var jsonRes = '{"userId":111323290434354540545}';
 
try {
    var obj = JSON.parse(jsonRes);
    console.log(obj);
} catch (e) {
    console.error("解析JSON时发生错误:", e);
}
-----------------------------------------------------------------
前端需要稳定每隔1s向服务端请求API, 请问如何实现？

答:

let timer
timer&&clearInterval(timer)
timer = setInterval(() => {
    // 请求api
}, 1000)

备注需注意是否有clearInterval
另使用setInterval,或者setTimeout都可能存在阻塞情况

-------------------------------------------------------------------
什么情况下，你会为你的项目引入状态管理库，比如Redux, Pinia, 可以简述一下起到了什么作用么？
答:
状态管理库可以允许跨组件或跨页面共享状态
比如登录状态信息等
--------------------------------------------------------------------
为什么ESM与CJS不能兼容？

ESM 和 CJS 是两套不同的设计。表面上，ESM 使用起来虽然有点接近 CJS，但是实现差异巨大。
CJS 的 require() 是同步的，实际执行的时候会从磁盘或者网络中读取文件，然后立即返回执行结果。被读取的模块有自己的执行逻辑，执行完成后通过 module.exports 返回结果。
ESM 的模块加载是基于 Top-level await 设计的，首先解析 import 和 export 指令，再执行代码，所以可以在执行代码之前检测到错误的依赖。
ESM 模块加载器在解析当前模块依赖之后，会下线这些依赖模块并在此解析，构建一个模块依赖图，直到依赖全部加载完成。最后，按照编写的代码，顺序对应的依赖。
根据 ESM 约定，这些依赖的 ES 模块都是并行下载最后顺序执行。
ESM 与 CJS 之间可以相互引用，但是有大量的坑
